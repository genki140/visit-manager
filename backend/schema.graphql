# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserArea {
  id: Int!
  user: User!
  area: Area!
  areaId: Float!
}

type OutlinePoint {
  id: Int!
  order: Float!
  latitude: Float!
  longitude: Float!
  outline: Outline!
}

type Outline {
  id: Int!
  points: [OutlinePoint!]!
  area: Area!
  areaId: Int!
}

type Resident {
  id: Int!
  name: String!
  floor: Float!
  room: Float!
  residence: Residence!
}

type Residence {
  id: Int!
  name: String!
  latitude: Float!
  longitude: Float!
  residents: [Resident!]!
  area: Area!
}

type AreaType {
  id: Int!
  order: Int!
  name: String!
  description: String!
  organization: Organization!
  organizationId: Float!
  areas: [Area!]!
}

type Area {
  id: Int!
  order: Int!
  name: String!
  description: String!
  organization: Organization!
  organizationId: Float!
  areaType: AreaType!
  areaTypeId: Float!
  userAreas: [UserArea!]!
  residences: [Residence!]!
  outlines: [Outline!]!
}

type Organization {
  id: Int!
  name: String!
  areas: [Area!]!
  userOrganizations: [UserOrganization!]!
}

type Ability {
  id: Int!
  name: String!
}

type Role {
  id: Int!
  name: String!
  userOrganization: [UserOrganization!]!
  abilities: [Ability!]!
}

type UserOrganization {
  id: Int!
  order: Int!
  organization: Organization!
  organizationId: Float!
  user: User!
  userId: Int!
  roles: [Role!]!
}

type User {
  id: Int!
  createdAt: Date!
  username: String!
  password: String!
  name: String!
  userOrganizations: [UserOrganization!]!
  userAreas: [UserArea!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  currentUser: User!
  googleMapApiKey: String!
  getTest: Float!
  userOrganizations: [UserOrganization!]!
  areas(ids: [Int!] = null, userIds: [Int!] = null, organizationId: Int!): [Area!]!
}

type Mutation {
  createUser(user: CreateUserInput!): User!
  deleteUser(id: Int!): User
  addTest: Float!
  createUserOrganization(organization: CreateUserOrganizationInput!): UserOrganization!
  updateUserOrganizations(userOrganizations: UpdateUserOrganizationsInput!): [UserOrganization!]!
  createArea(area: CreateAreaInput!): Area!
  updateAreaOrders(areaOrders: UpdateAreaOrdersInput!): [Area!]!
  createOutline(outline: CreateOutlineInput!): Outline!
  updateOutline(outline: UpdateOutlineInput!): Outline!
  deleteOutline(id: Int!): Boolean!
  createResidence(residence: CreateResidenceInput!): Residence!
  updateResidence(residence: UpdateResidenceInput!): Residence!
  deleteResidence(id: Int!): Boolean!
}

input CreateUserInput {
  username: String = ""
  password: String = ""
  name: String = ""
}

input CreateUserOrganizationInput {
  name: String = ""
}

input UpdateUserOrganizationsInput {
  items: [UpdateUserOrganizationsInputItem!] = []
}

input UpdateUserOrganizationsInputItem {
  id: Int = 0
  order: Int = 0
}

input CreateAreaInput {
  organizationId: Int = 0
  name: String = ""
  description: String = ""
}

input UpdateAreaOrdersInput {
  items: [UpdateAreaOrdersInputItem!] = []
}

input UpdateAreaOrdersInputItem {
  id: Int = 0
  order: Int = 0
}

input CreateOutlineInput {
  points: [CreateOutlinePointInput!] = []
  areaId: Int!
}

input CreateOutlinePointInput {
  latitude: Float = 0
  longitude: Float = 0
}

input UpdateOutlineInput {
  id: Int = 0
  points: [UpdateOutlinePointInput!] = []
}

input UpdateOutlinePointInput {
  order: Float = 0
  latitude: Float = 0
  longitude: Float = 0
}

input CreateResidenceInput {
  areaId: Int = 0
  name: String = ""
  latitude: Float = 0
  longitude: Float = 0
}

input UpdateResidenceInput {
  id: Int = 0
  name: String = ""
  latitude: Float = 0
  longitude: Float = 0
}

type Subscription {
  testAdded: Float!
}
